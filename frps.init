#!/bin/bash
# chkconfig: 2345 55 25
# Description: Startup script for frps on Debian. Place in /etc/init.d and
# run 'update-rc.d -f frps defaults', or use the appropriate command on your
# distro. For CentOS/Redhat run: 'chkconfig --add frps'
#=========================================================
#   System Required:  CentOS/Debian/Ubuntu/Fedora (32bit/64bit)
#   Description:  Manager for frps, Written by Clang
#   Menderï¼šMvsCode
#=========================================================
### BEGIN INIT INFO
# Provides:          frps
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the frps
# Description:       starts frps using start-stop
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
ProgramName="Frps"
ProgramPath="/usr/local/frps"
NAME=frps
BIN="${ProgramPath}/${NAME}"
CONFIGFILE="${ProgramPath}/frps.ini"
SCRIPTNAME="/etc/init.d/${NAME}"
version="2023"
program_version=$(${BIN} --version)
RET_VAL=0

[ -x "${BIN}" ] || exit 0

print_header() {
    echo "+---------------------------------------------------------+"
    echo "|     Manager for ${ProgramName}, Author Clang, Mender MvsCode      |"
    echo "+---------------------------------------------------------+"
}

check_run() {
    PID=$(pgrep -f "${BIN}")
    [ -n "$PID" ]
}

load_config() {
    if [ ! -r "${CONFIGFILE}" ]; then
        echo "config file ${CONFIGFILE} not found"
        return 1
    fi
}

start() {
    print_header
    if check_run; then
        echo "${ProgramName} (pid $PID) already running."
        return 0
    fi
    load_config || return 1
    echo -n "Starting ${ProgramName} (${program_version})..."
    ${BIN} -c "${CONFIGFILE}" >/dev/null 2>&1 &
    sleep 1
    if ! check_run; then
        echo "start failed"
        return 1
    fi
    echo " done"
    echo "${ProgramName} (pid $PID) is running."
}

stop() {
    print_header
    if ! check_run; then
        echo "${ProgramName} is not running."
        return 0
    fi
    echo -n "Stopping ${ProgramName} (pid $PID)... "
    kill $PID
    if [ $? -eq 0 ]; then
        echo " done"
    else
        echo " failed"
    fi
}

restart() {
    stop
    start
}

status() {
    if check_run; then
        echo "${ProgramName} (pid $PID) is running..."
    else
        echo "${ProgramName} is stopped"
    fi
}

config() {
    if [ -s "${CONFIGFILE}" ]; then
        vi "${CONFIGFILE}"
    else
        echo "${ProgramName} configuration file not found!"
    fi
}

version() {
    echo "${ProgramName} version ${program_version}"
}

help() {
    ${BIN} --help
}

case "${1:-}" in
    start|stop|restart|status|config)
        "$1"
        ;;
    version|VERSION|-v|--version)
        version
        ;;
    config|CONFIG|conf|CONF|-c|--config)
        config
        ;;
    help|HELP|-h|--help)
        help
        ;;
    *)
        print_header
        echo "Usage: $SCRIPTNAME {start|stop|restart|status|config|version|help}"
        RET_VAL=1
        ;;
esac
exit $RET_VAL
