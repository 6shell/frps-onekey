#!/bin/bash
# chkconfig: 2345 55 25
# Description: Startup script for frps on Debian. Place in /etc/init.d and
# run 'update-rc.d -f frps defaults', or use the appropriate command on your
# distro. For CentOS/Redhat run: 'chkconfig --add frps'
#=========================================================
#   System Required:  CentOS/Debian/Ubuntu/Fedora (32bit/64bit)
#   Description:  Manager for frps, Written by Clang
#   Menderï¼šMvsCode
#=========================================================
### BEGIN INIT INFO
# Provides:          frps
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the frps
# Description:       starts frps using start-stop
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
ProgramName="Frps"
ProgramPath="/usr/local/frps"
NAME=frps
BIN=${ProgramPath}/${NAME}
CONFIGFILE=${ProgramPath}/frps.ini
SCRIPTNAME=/etc/init.d/${NAME}
version="2023"
program_version=$(${BIN} --version)
RET_VAL=0

[ -x ${BIN} ] || exit 0

function clangcn() {
    echo "+---------------------------------------------------------+"
    echo "|     Manager for ${ProgramName}, Author Clang, Mender MvsCode      |"
    echo "+---------------------------------------------------------+"
}

function check_run() {
    PID=$(pgrep -f "${BIN}")
    [ -n "$PID" ]
}

function load_config() {
    [ -r "${CONFIGFILE}" ] || { echo "config file ${CONFIGFILE} not found"; return 1; }
}

function start() {
    [ "${1}" = "start" ] && clangcn
    check_run && { echo "${ProgramName} (pid $PID) already running."; return 0; }
    load_config || return 1
    echo -n "Starting ${ProgramName}(${program_version})..."
    ${BIN} -c "${CONFIGFILE}" >/dev/null 2>&1 &
    sleep 1
    ! check_run && { echo "start failed"; return 1; }
    echo " done"
    echo "${ProgramName} (pid $PID) is running."
}

function stop() {
    [ "${1}" = "stop" ] || [ "${1}" = "restart" ] && clangcn
    check_run || { echo "${ProgramName} is not running."; return 0; }
    echo -n "Stopping ${ProgramName} (pid $PID)... "
    kill $PID
    [ "$?" -eq 0 ] && echo " done" || echo " failed"
}

function restart() {
    stop restart
    start restart
}

function status() {
    PID=$(pgrep -f "${BIN}")
    [ -n "$PID" ] && echo "${ProgramName} (pid $PID) is running..." || echo "${ProgramName} is stopped"
}

function config() {
    [ -s "${CONFIGFILE}" ] && vi "${CONFIGFILE}" || echo "${ProgramName} configuration file not found!"
}

function version() {
    echo "${ProgramName} version ${program_version}"
}

function help() {
    ${BIN} --help
}

case "${1:-}" in
    start|stop|restart|status|config)
        "$1"
        ;;
    [vV][eE][rR][sS][iI][oO][nN]|-[vV][eE][rR][sS][iI][oO][nN]|--[vV][eE][rR][sS][iI][oO][nN]|-[vV]|--[vV])
        version
        ;;
    [Cc]|[Cc][Oo][Nn][Ff]|[Cc][Oo][Nn][Ff][iI][Gg]|-[Cc]|-[Cc][Oo][Nn][Ff]|-[Cc][Oo][Nn][Ff][iI][Gg]|--[Cc]|--[Cc][Oo][Nn][Ff]|--[Cc][Oo][Nn][Ff][iI][Gg])
        config
        ;;
    [Hh]|[Hh][Ee][Ll][Pp]|-[Hh]|-[Hh][Ee][Ll][Pp]|--[Hh]|--[Hh][Ee][Ll][Pp])
        help
        ;;
    *)
        clangcn
        echo "Usage: $SCRIPTNAME {start|stop|restart|status|config|version}"
        RET_VAL=1
        ;;
esac
exit $RET_VAL
