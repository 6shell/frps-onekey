name: Sync Releases

on:
  release:
    types: [published]
    
jobs:

  sync-releases:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Download release assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir assets
        assets_url=$(curl -s https://api.github.com/repos/fatedier/frp/releases/latest | jq -r '.assets_url')
        for asset_url in $(curl -s $assets_url | jq -r '.[].browser_download_url'); do
          filename=$(basename $asset_url)
          curl -JOL $asset_url -o assets/$filename
        done
        
    - name: Create release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        release_data=$(curl -s https://api.github.com/repos/fatedier/frp/releases/latest)
        tag_name=$(echo $release_data | jq -r '.tag_name')
        body=$(echo $release_data | jq -r '.body')
        release_id=$(curl -X POST https://api.github.com/repos/${{ github.repository }}/releases \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d "{\"tag_name\": \"$tag_name\", \"name\": \"$tag_name\", \"body\": \"$body\"}" | jq -r '.id')
        echo "::set-output name=release_id::$release_id"
        
    - name: Upload assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for asset in assets/*; do
          curl -X POST https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.release_id }}/assets?name=$(basename $asset) \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: $(file -b --mime-type $asset)" \
            --data-binary @$asset
        done
